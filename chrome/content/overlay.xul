<?xml version="1.0" encoding="UTF-8"?>
<!-- ***** BEGIN LICENSE BLOCK *****
  -   Version: MPL 1.1/GPL 2.0/LGPL 2.1
  -
  - The contents of this file are subject to the Mozilla Public License Version
  - 1.1 (the "License"); you may not use this file except in compliance with
  - the License. You may obtain a copy of the License at
  - http://www.mozilla.org/MPL/
  - 
  - Software distributed under the License is distributed on an "AS IS" basis,
  - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
  - for the specific language governing rights and limitations under the
  - License.
  -
  - The Original Code is Rainbow.
  -
  - The Initial Developer of the Original Code is
  - Heather Arthur.
  - Portions created by the Initial Developer are Copyright (C) 2009
  - the Initial Developer. All Rights Reserved.
  -
  - Contributor(s):
  -
  - Alternatively, the contents of this file may be used under the terms of
  - either the GNU General Public License Version 2 or later (the "GPL"), or
  - the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
  - in which case the provisions of the GPL or the LGPL are applicable instead
  - of those above. If you wish to allow use of your version of this file only
  - under the terms of either the GPL or the LGPL, and not to allow others to
  - use your version of this file under the terms of the MPL, indicate your
  - decision by deleting the provisions above and replace them with the notice
  - and other provisions required by the GPL or the LGPL. If you do not delete
  - the provisions above, a recipient may use your version of this file under
  - the terms of any one of the MPL, the GPL or the LGPL.
  - 
  - ***** END LICENSE BLOCK ***** -->
<?xml-stylesheet href="chrome://rainbows/skin/overlay.css" type="text/css"?>
<!DOCTYPE overlay SYSTEM "chrome://rainbows/locale/rainbow.dtd">
<overlay id="rainbow-overlay"
         xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
  <script type="application/x-javascript" src="chrome://rainbows/content/colorCommon.js"/>
  <script type="application/x-javascript" src="chrome://rainbows/content/common.js"/>
  <script type="application/x-javascript" src="chrome://rainbows/content/overlay.js"/>
  <script type="application/x-javascript" src="chrome://rainbows/content/inspector.js"/>
  <script type="application/x-javascript" src="chrome://rainbows/content/analyzer/analyzer.js"/>
  
  <stringbundleset id="stringbundleset">
    <stringbundle id="rainbow-strings" src="chrome://rainbows/locale/rainbow.properties"/>
  </stringbundleset>

  <keyset>
    <key id="rainbow-inspector-key" modifiers="accel, alt" key="I" 
         oncommand="rainbowInspector.toggleInspector();"/>
  </keyset>

  <menupopup id="menu_ToolsPopup">
    <menu id="rainbow-menu" label="&rainbow.label;" class="menu-iconic"
          image="chrome://rainbows/skin/favicon.png">
      <menupopup>
        <menuitem id="rainbow-menu-inspector"
                  label="&rainbow.menu.inspector.label;"
                  accesskey="&rainbow.menu.inspector.accesskey;"
                  key="rainbow-inspector-key"
                  oncommand="rainbowInspector.toggleInspector();"/>
        <menuitem id="rainbow-menu-picker"
                  label="&rainbow.menu.picker.label;"
                  accesskey="&rainbow.menu.picker.accesskey;"
                  oncommand="rainbowc.openPicker();"/>
        <menuitem id="rainbow-menu-library"
                  label="&rainbow.menu.library.label;"
                  accesskey="&rainbow.menu.library.accesskey;"
                  oncommand="rainbowc.openLibrary();"/>
        <menuitem id="rainbow-menu-analyzer"
                  label="&rainbow.menu.analyzer.label;"
                  accesskey="&rainbow.menu.analyzer.accesskey;"
                  oncommand="rainbowAnalyzer.analyzePage();"/>
      </menupopup>
    </menu>
  </menupopup>

  <popup id="contentAreaContextMenu">
    <menuseparator id="rainbow-context-separator" hidden="true"/>
    <menu id="rainbow-context-menu" label="&rainbow.label;" class="menu-iconic"          image="chrome://rainbows/skin/favicon.png" hidden="true">
      <menupopup>
        <menuitem id="rainbow-context-inspector"
                  label="&rainbow.menu.inspector.label;"
                  accesskey="&rainbow.menu.inspector.accesskey;"
                  key="rainbow-inspector-key"
                  oncommand="rainbowInspector.toggleInspector();"/>
        <menuitem id="rainbow-context-picker"
                  label="&rainbow.menu.picker.label;"
                  accesskey="&rainbow.menu.picker.accesskey;"
                  key="rainbow-picker-key"
                  oncommand="rainbowc.openPicker();"/>
        <menuitem id="rainbow-context-library"
                  label="&rainbow.menu.library.label;"
                  accesskey="&rainbow.menu.library.accesskey;"
                  oncommand="rainbowc.openLibrary();"/>
        <menuitem id="rainbow-context-analyzer"
                  label="&rainbow.menu.analyzer.label;"
                  accesskey="&rainbow.menu.analyzer.accesskey;"
                  oncommand="rainbowAnalyzer.analyzePage();"/>
      </menupopup>
    </menu>
  </popup>
 

  <statusbar id="status-bar">
   <statusbarpanel id="rainbow-statusbar"
                   class="statusbarpanel-iconic"
                   onclick="colorPlay.statusBarClicked(event);"
                   hidden="true"/>
  </statusbar>


  <window id="main-window" xmlns:html="http://www.w3.org/1999/xhtml">
    <menupopup id="rainbow-swatch-context" onpopupshowing="rainbowInspector.onContextShowing()">
      <menuitem label="&rainbow.context.open.label;"
                oncommand="rainbowInspector.openColor()" class="menuitem-iconic" 
                image="moz-icon://stock/gtk-open?size=menu"
                accesskey="&rainbow.context.open.accesskey;"/>
      <menu label="&rainbow.context.copy.label;" class="menu-iconic"
            accesskey="&rainbow.context.copy.accesskey;"> 
      <menupopup>
        <menuitem id="rainbow-context-plain" 
                  oncommand="rainbowc.copy(this.label)" class="menuitem-iconic"
                  image="moz-icon://stock/gtk-copy?size=menu"/>
        <menuitem id="rainbow-context-hex" 
                  oncommand="rainbowc.copy(this.label)" class="menuitem-iconic"
                  image="moz-icon://stock/gtk-copy?size=menu"/>
        <menuitem id="rainbow-context-rgb"
                  oncommand="rainbowc.copy(this.label)" class="menuitem-iconic"
                  image="moz-icon://stock/gtk-copy?size=menu"/>
        <menuitem id="rainbow-context-per"
                  oncommand="rainbowc.copy(this.label)" class="menuitem-iconic"
                  image="moz-icon://stock/gtk-copy?size=menu"/>
        <menuitem id="rainbow-context-hsl"
                  oncommand="rainbowc.copy(this.label)" class="menuitem-iconic"
                  image="moz-icon://stock/gtk-copy?size=menu"/>
       </menupopup>
      </menu>
    </menupopup>  
    <menupopup id="rainbow-analyzer-context">
      <menu label="&rainbow.analyzer.limit;"
            accesskey="&rainbow.analyzer.limit.accesskey;"> 
      <menupopup>
        <menuitem label="5"
                  oncommand="rainbowAnalyzer.setLimit(5)"/>
       <menuitem label="6"
                 oncommand="rainbowAnalyzer.setLimit(6)"/>
       <menuitem label="7"
                 oncommand="rainbowAnalyzer.setLimit(7)"/>
       <menuitem label="8"
                 oncommand="rainbowAnalyzer.setLimit(8)"/>
       <menuitem label="10"
                 oncommand="rainbowAnalyzer.setLimit(10)"/>
       <menuitem label="12"
                 oncommand="rainbowAnalyzer.setLimit(12)"/>
       <menuitem label="15"
                 oncommand="rainbowAnalyzer.setLimit(15)"/>
       <menuitem label="20"
                 oncommand="rainbowAnalyzer.setLimit(20)"/>
       </menupopup>
      </menu>
    </menupopup>

    <html:canvas id="rainbow-inspector" style="display:none;" width="1px" height="1px"/>

    <panel id="rainbow-analyzer-panel"
           noautohide="true"
           context="rainbow-analyzer-context"
           ondragstart="rainbowAnalyzer.dragStart(event);"
           ondragend="rainbowAnalyzer.dragEnd(event);">
      <hbox pack="end" flex="1">
        <image id="rainbow-analyzer-close" class="rainbow-top-button"
               src="chrome://rainbows/skin/close2.png"
               onclick="rainbowAnalyzer.cancel();"/>
      </hbox>
        <hbox id="rainbow-analyzer-progress">
          <label id="rainbow-analyzer-progress-msg" value="&rainbow.analyzer.progress;"/>
          <label id="rainbow-analyzer-progress-url" crop="end"/>
        </hbox>
      <vbox id="rainbow-analyzer-container">
      </vbox>
      <hbox id="rainbow-analyzer-footer">
        <label id="rainbow-analyzer-analyze" class="rainbow-analyzer-label"
               value="&rainbow.analyzer.analyze;"
               onclick="rainbowAnalyzer.analyzePage();"/>
        <hbox flex="3" pack="end">
          <vbox>
          <image id="rainbow-analyzer-expand"
                 src="chrome://rainbows/skin/arrow.png"
                 onclick="rainbowAnalyzer.addRow();"/>
          </vbox>
        </hbox>
        <hbox pack="end" flex="2">
         <label id="rainbow-analyzer-copy" class="rainbow-analyzer-label"
              value="&rainbow.inspector.copy.label;"
              onclick="rainbowAnalyzer.copyAll();"/>
         <label id="rainbow-analyzer-bookmark" class="rainbow-analyzer-label"
              value="&rainbow.inspector.bookmark.label;"
              onclick="rainbowAnalyzer.bookmarkAll();"/>
        </hbox>
      </hbox>
    </panel>
    
    <panel id="rainbow-swatch"
           noautohide="true"
           ondragstart="rainbowInspector.dragStart(event);"
           ondragend="rainbowInspector.dragEnd(event);"
           onkeypress="rainbowInspector.moveSwatch(event);"
           ondblclick="rainbowc.openPicker(this.color);"
           context="rainbow-swatch-context">
      <vbox id="rainbow-swatch-content">
        <stack id="rainbow-swatch-stack">
          <hbox flex="1" top="0px" left="0px">
            <label id="rainbow-swatch-colorval"
                   ondragstart="rainbowInspector.applyStart(event);" 
                   ondragend="rainbowInspector.applyEnd(event);"
                   onclick="rainbowInspector.switchFormat(event);"
                   hidden="true"/>
          </hbox>
          <hbox id="rainbow-swatch-top-buttons" top="2px" left="85px" hidden="true">
            <image id="rainbow-swatch-unfix" class="rainbow-top-button"
                   src="chrome://rainbows/skin/search-glass.png"
                   onclick="rainbowInspector.resumeInspect();"
                   tooltiptext="&rainbow.inspector.resume.tooltip;"/>
            <image id="rainbow-swatch-close" class="rainbow-top-button"
                   src="chrome://rainbows/skin/close.png"
                   onclick="rainbowInspector.stopInspector();"
                   tooltiptext="&rainbow.inspector.close.tooltip;"/>
          </hbox>
        </stack>
        <vbox id="rainbow-swatch-stats"  onclick="rainbowInspector.swatchClick(event);">
          <label id="rainbow-swatch-nodeName" hidden="true"/>
          <label id="rainbow-swatch-coords" hidden="true"/>
          <label id="rainbow-swatch-measure" hidden="true"/>
        </vbox>
        <vbox id="rainbow-swatch-buttons" hidden="true" flex="1" pack="end">
          <button id="rainbow-swatch-copy" label="&rainbow.inspector.copy.label;"
                  oncommand="rainbowInspector.copyColor();"/>
          <button id="rainbow-swatch-bookmark" label="&rainbow.inspector.bookmark.label;"
                  oncommand="rainbowInspector.bookmarkColor();"/>
        </vbox>
      </vbox>
    </panel>
  </window>

</overlay>
